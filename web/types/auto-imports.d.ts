/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Fragment: typeof import('vue')['Fragment']
  const MenuType: typeof import('../../shared/options/menu-type')['MenuType']
  const RouterView: typeof import('vue-router')['RouterView']
  const YesOrNo: typeof import('../../shared/options/yes-or-no')['YesOrNo']
  const authApi: typeof import('../apis/auth')['authApi']
  const computed: typeof import('vue')['computed']
  const configApi: typeof import('../apis/config')['configApi']
  const createPinia: typeof import('pinia')['createPinia']
  const createWebHistory: typeof import('vue-router')['createWebHistory']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const delay: typeof import('../../shared/utils/async')['delay']
  const dictDataApi: typeof import('../apis/dict-data')['dictDataApi']
  const dictDataApo: typeof import('../apis/dict-data')['dictDataApo']
  const dictTypeApi: typeof import('../apis/dict-type')['dictTypeApi']
  const h: typeof import('vue')['h']
  const listToTree: typeof import('../../shared/utils/transform')['listToTree']
  const postApi: typeof import('../apis/post')['postApi']
  const ref: typeof import('vue')['ref']
  const roleApi: typeof import('../apis/role')['roleApi']
  const roleAuthApi: typeof import('../apis/roleAuth')['roleAuthApi']
  const router: typeof import('../router/index')['router']
  const routes: typeof import('../router/routes')['routes']
  const store: typeof import('../store/index')['store']
  const unref: typeof import('vue')['unref']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useUserStore: typeof import('../store/useUserStore')['useUserStore']
  const userApi: typeof import('../apis/user')['userApi']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { MenuType } from '../../shared/options/menu-type'
  import('../../shared/options/menu-type')
  // @ts-ignore
  export type { YesOrNo } from '../../shared/options/yes-or-no'
  import('../../shared/options/yes-or-no')
}
